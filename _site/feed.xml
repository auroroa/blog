<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>做好现在的事</title>
    <description>“以傲慢与偏执回敬傲慢与偏见”
</description>
    <link>/blog/</link>
    <atom:link href="/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 02 Jun 2016 16:08:37 +0800</pubDate>
    <lastBuildDate>Thu, 02 Jun 2016 16:08:37 +0800</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Swimlane</title>
        <description>&lt;!--
The MIT License (MIT)

Copyright (c) 2013 bill@bunkat.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
--&gt;


&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Swimlane using d3.js&lt;/title&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/blog/js/d3.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/blog/js/2016-06-02-randomData.js&quot;&gt;&lt;/script&gt;

&lt;style&gt;
.chart {
	shape-rendering: crispEdges;
}

.mini text {
	font: 9px sans-serif;	
}

.main text {
	font: 12px sans-serif;	
}

.month text {
	text-anchor: start;
}

.todayLine {
	stroke: blue;
	stroke-width: 1.5;
}

.axis line, .axis path {
	stroke: black;
}

.miniItem {
	stroke-width: 6;	
}

.future {
	stroke: gray;
	fill: #ddd;
}

.past {
	stroke: green;
	fill: lightgreen;
}

.brush .extent {
	stroke: gray;
	fill: blue;
	fill-opacity: .165;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;script type=&quot;text/javascript&quot;&gt;

var data = randomData()
  , lanes = data.lanes
  , items = data.items
  , now = new Date();

var margin = {top: 20, right: 15, bottom: 15, left: 60}
  , width = 960 - margin.left - margin.right
  , height = 500 - margin.top - margin.bottom
  , miniHeight = lanes.length * 12 + 50
  , mainHeight = height - miniHeight - 50;

var x = d3.time.scale()
	.domain([d3.time.sunday(d3.min(items, function(d) { return d.start; })),
			 d3.max(items, function(d) { return d.end; })])
	.range([0, width]);
var x1 = d3.time.scale().range([0, width]);

var ext = d3.extent(lanes, function(d) { return d.id; });
var y1 = d3.scale.linear().domain([ext[0], ext[1] + 1]).range([0, mainHeight]);
var y2 = d3.scale.linear().domain([ext[0], ext[1] + 1]).range([0, miniHeight]);

var chart = d3.select(&#39;body&#39;)
	.append(&#39;svg:svg&#39;)
	.attr(&#39;width&#39;, width + margin.right + margin.left)
	.attr(&#39;height&#39;, height + margin.top + margin.bottom)
	.attr(&#39;class&#39;, &#39;chart&#39;);

chart.append(&#39;defs&#39;).append(&#39;clipPath&#39;)
	.attr(&#39;id&#39;, &#39;clip&#39;)
	.append(&#39;rect&#39;)
		.attr(&#39;width&#39;, width)
		.attr(&#39;height&#39;, mainHeight);

var main = chart.append(&#39;g&#39;)
	.attr(&#39;transform&#39;, &#39;translate(&#39; + margin.left + &#39;,&#39; + margin.top + &#39;)&#39;)
	.attr(&#39;width&#39;, width)
	.attr(&#39;height&#39;, mainHeight)
	.attr(&#39;class&#39;, &#39;main&#39;);

var mini = chart.append(&#39;g&#39;)
	.attr(&#39;transform&#39;, &#39;translate(&#39; + margin.left + &#39;,&#39; + (mainHeight + 60) + &#39;)&#39;)
	.attr(&#39;width&#39;, width)
	.attr(&#39;height&#39;, miniHeight)
	.attr(&#39;class&#39;, &#39;mini&#39;);

// draw the lanes for the main chart
main.append(&#39;g&#39;).selectAll(&#39;.laneLines&#39;)
	.data(lanes)
	.enter().append(&#39;line&#39;)
	.attr(&#39;x1&#39;, 0)
	.attr(&#39;y1&#39;, function(d) { return d3.round(y1(d.id)) + 0.5; })
	.attr(&#39;x2&#39;, width)
	.attr(&#39;y2&#39;, function(d) { return d3.round(y1(d.id)) + 0.5; })
	.attr(&#39;stroke&#39;, function(d) { return d.label === &#39;&#39; ? &#39;white&#39; : &#39;lightgray&#39; });

main.append(&#39;g&#39;).selectAll(&#39;.laneText&#39;)
	.data(lanes)
	.enter().append(&#39;text&#39;)
	.text(function(d) { return d.label; })
	.attr(&#39;x&#39;, -10)
	.attr(&#39;y&#39;, function(d) { return y1(d.id + .5); })
	.attr(&#39;dy&#39;, &#39;0.5ex&#39;)
	.attr(&#39;text-anchor&#39;, &#39;end&#39;)
	.attr(&#39;class&#39;, &#39;laneText&#39;);

// draw the lanes for the mini chart
mini.append(&#39;g&#39;).selectAll(&#39;.laneLines&#39;)
	.data(lanes)
	.enter().append(&#39;line&#39;)
	.attr(&#39;x1&#39;, 0)
	.attr(&#39;y1&#39;, function(d) { return d3.round(y2(d.id)) + 0.5; })
	.attr(&#39;x2&#39;, width)
	.attr(&#39;y2&#39;, function(d) { return d3.round(y2(d.id)) + 0.5; })
	.attr(&#39;stroke&#39;, function(d) { return d.label === &#39;&#39; ? &#39;white&#39; : &#39;lightgray&#39; });

mini.append(&#39;g&#39;).selectAll(&#39;.laneText&#39;)
	.data(lanes)
	.enter().append(&#39;text&#39;)
	.text(function(d) { return d.label; })
	.attr(&#39;x&#39;, -10)
	.attr(&#39;y&#39;, function(d) { return y2(d.id + .5); })
	.attr(&#39;dy&#39;, &#39;0.5ex&#39;)
	.attr(&#39;text-anchor&#39;, &#39;end&#39;)
	.attr(&#39;class&#39;, &#39;laneText&#39;);

// draw the x axis
var xDateAxis = d3.svg.axis()
	.scale(x)
	.orient(&#39;bottom&#39;)
	.ticks(d3.time.mondays, (x.domain()[1] - x.domain()[0]) &gt; 15552e6 ? 2 : 1)
	.tickFormat(d3.time.format(&#39;%d&#39;))
	.tickSize(6, 0, 0);

var x1DateAxis = d3.svg.axis()
	.scale(x1)
	.orient(&#39;bottom&#39;)
	.ticks(d3.time.days, 1)
	.tickFormat(d3.time.format(&#39;%a %d&#39;))
	.tickSize(6, 0, 0);

var xMonthAxis = d3.svg.axis()
	.scale(x)
	.orient(&#39;top&#39;)
	.ticks(d3.time.months, 1)
	.tickFormat(d3.time.format(&#39;%b %Y&#39;))
	.tickSize(15, 0, 0);

var x1MonthAxis = d3.svg.axis()
	.scale(x1)
	.orient(&#39;top&#39;)
	.ticks(d3.time.mondays, 1)
	.tickFormat(d3.time.format(&#39;%b - Week %W&#39;))
	.tickSize(15, 0, 0);

main.append(&#39;g&#39;)
	.attr(&#39;transform&#39;, &#39;translate(0,&#39; + mainHeight + &#39;)&#39;)
	.attr(&#39;class&#39;, &#39;main axis date&#39;)
	.call(x1DateAxis);

main.append(&#39;g&#39;)
	.attr(&#39;transform&#39;, &#39;translate(0,0.5)&#39;)
	.attr(&#39;class&#39;, &#39;main axis month&#39;)
	.call(x1MonthAxis)
	.selectAll(&#39;text&#39;)
		.attr(&#39;dx&#39;, 5)
		.attr(&#39;dy&#39;, 12);

mini.append(&#39;g&#39;)
	.attr(&#39;transform&#39;, &#39;translate(0,&#39; + miniHeight + &#39;)&#39;)
	.attr(&#39;class&#39;, &#39;axis date&#39;)
	.call(xDateAxis);

mini.append(&#39;g&#39;)
	.attr(&#39;transform&#39;, &#39;translate(0,0.5)&#39;)
	.attr(&#39;class&#39;, &#39;axis month&#39;)
	.call(xMonthAxis)
	.selectAll(&#39;text&#39;)
		.attr(&#39;dx&#39;, 5)
		.attr(&#39;dy&#39;, 12);

// draw a line representing today&#39;s date
main.append(&#39;line&#39;)
	.attr(&#39;y1&#39;, 0)
	.attr(&#39;y2&#39;, mainHeight)
	.attr(&#39;class&#39;, &#39;main todayLine&#39;)
	.attr(&#39;clip-path&#39;, &#39;url(#clip)&#39;);
	
mini.append(&#39;line&#39;)
	.attr(&#39;x1&#39;, x(now) + 0.5)
	.attr(&#39;y1&#39;, 0)
	.attr(&#39;x2&#39;, x(now) + 0.5)
	.attr(&#39;y2&#39;, miniHeight)
	.attr(&#39;class&#39;, &#39;todayLine&#39;);

// draw the items
var itemRects = main.append(&#39;g&#39;)
	.attr(&#39;clip-path&#39;, &#39;url(#clip)&#39;);

mini.append(&#39;g&#39;).selectAll(&#39;miniItems&#39;)
	.data(getPaths(items))
	.enter().append(&#39;path&#39;)
	.attr(&#39;class&#39;, function(d) { return &#39;miniItem &#39; + d.class; })
	.attr(&#39;d&#39;, function(d) { return d.path; });

// invisible hit area to move around the selection window
mini.append(&#39;rect&#39;)
	.attr(&#39;pointer-events&#39;, &#39;painted&#39;)
	.attr(&#39;width&#39;, width)
	.attr(&#39;height&#39;, miniHeight)
	.attr(&#39;visibility&#39;, &#39;hidden&#39;)
	.on(&#39;mouseup&#39;, moveBrush);

// draw the selection area
var brush = d3.svg.brush()
	.x(x)
	.extent([d3.time.monday(now),d3.time.saturday.ceil(now)])
	.on(&quot;brush&quot;, display);

mini.append(&#39;g&#39;)
	.attr(&#39;class&#39;, &#39;x brush&#39;)
	.call(brush)
	.selectAll(&#39;rect&#39;)
		.attr(&#39;y&#39;, 1)
		.attr(&#39;height&#39;, miniHeight - 1);

mini.selectAll(&#39;rect.background&#39;).remove();
display();

function display () {

	var rects, labels
	  , minExtent = d3.time.day(brush.extent()[0])
	  , maxExtent = d3.time.day(brush.extent()[1])
	  , visItems = items.filter(function (d) { return d.start &lt; maxExtent &amp;&amp; d.end &gt; minExtent});

	mini.select(&#39;.brush&#39;).call(brush.extent([minExtent, maxExtent]));		

	x1.domain([minExtent, maxExtent]);

	if ((maxExtent - minExtent) &gt; 1468800000) {
		x1DateAxis.ticks(d3.time.mondays, 1).tickFormat(d3.time.format(&#39;%a %d&#39;))
		x1MonthAxis.ticks(d3.time.mondays, 1).tickFormat(d3.time.format(&#39;%b - Week %W&#39;))		
	}
	else if ((maxExtent - minExtent) &gt; 172800000) {
		x1DateAxis.ticks(d3.time.days, 1).tickFormat(d3.time.format(&#39;%a %d&#39;))
		x1MonthAxis.ticks(d3.time.mondays, 1).tickFormat(d3.time.format(&#39;%b - Week %W&#39;))
	}
	else {
		x1DateAxis.ticks(d3.time.hours, 4).tickFormat(d3.time.format(&#39;%I %p&#39;))
		x1MonthAxis.ticks(d3.time.days, 1).tickFormat(d3.time.format(&#39;%b %e&#39;))
	}


	//x1Offset.range([0, x1(d3.time.day.ceil(now) - x1(d3.time.day.floor(now)))]);

	// shift the today line
	main.select(&#39;.main.todayLine&#39;)
		.attr(&#39;x1&#39;, x1(now) + 0.5)
		.attr(&#39;x2&#39;, x1(now) + 0.5);

	// update the axis
	main.select(&#39;.main.axis.date&#39;).call(x1DateAxis);
	main.select(&#39;.main.axis.month&#39;).call(x1MonthAxis)
		.selectAll(&#39;text&#39;)
			.attr(&#39;dx&#39;, 5)
			.attr(&#39;dy&#39;, 12);

	// upate the item rects
	rects = itemRects.selectAll(&#39;rect&#39;)
		.data(visItems, function (d) { return d.id; })
		.attr(&#39;x&#39;, function(d) { return x1(d.start); })
		.attr(&#39;width&#39;, function(d) { return x1(d.end) - x1(d.start); });

	rects.enter().append(&#39;rect&#39;)
		.attr(&#39;x&#39;, function(d) { return x1(d.start); })
		.attr(&#39;y&#39;, function(d) { return y1(d.lane) + .1 * y1(1) + 0.5; })
		.attr(&#39;width&#39;, function(d) { return x1(d.end) - x1(d.start); })
		.attr(&#39;height&#39;, function(d) { return .8 * y1(1); })
		.attr(&#39;class&#39;, function(d) { return &#39;mainItem &#39; + d.class; });

	rects.exit().remove();

	// update the item labels
	labels = itemRects.selectAll(&#39;text&#39;)
		.data(visItems, function (d) { return d.id; })
		.attr(&#39;x&#39;, function(d) { return x1(Math.max(d.start, minExtent)) + 2; });
				
	labels.enter().append(&#39;text&#39;)
		.text(function (d) { return &#39;Item\n\n\n\n Id: &#39; + d.id; })
		.attr(&#39;x&#39;, function(d) { return x1(Math.max(d.start, minExtent)) + 2; })
		.attr(&#39;y&#39;, function(d) { return y1(d.lane) + .4 * y1(1) + 0.5; })
		.attr(&#39;text-anchor&#39;, &#39;start&#39;)
		.attr(&#39;class&#39;, &#39;itemLabel&#39;);

	labels.exit().remove();
}

function moveBrush () {
	var origin = d3.mouse(this)
	  , point = x.invert(origin[0])
	  , halfExtent = (brush.extent()[1].getTime() - brush.extent()[0].getTime()) / 2
	  , start = new Date(point.getTime() - halfExtent)
	  , end = new Date(point.getTime() + halfExtent);

	brush.extent([start,end]);
	display();
}

// generates a single path for each item class in the mini display
// ugly - but draws mini 2x faster than append lines or line generator
// is there a better way to do a bunch of lines as a single path with d3?
function getPaths(items) {
	var paths = {}, d, offset = .5 * y2(1) + 0.5, result = [];
	for (var i = 0; i &lt; items.length; i++) {
		d = items[i];
		if (!paths[d.class]) paths[d.class] = &#39;&#39;;	
		paths[d.class] += [&#39;M&#39;,x(d.start),(y2(d.lane) + offset),&#39;H&#39;,x(d.end)].join(&#39; &#39;);
	}

	for (var className in paths) {
		result.push({class: className, path: paths[className]});
	}

	return result;
}

&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 00:00:00 +0800</pubDate>
        <link>/blog/d3/2016/06/02/swimlane/</link>
        <guid isPermaLink="true">/blog/d3/2016/06/02/swimlane/</guid>
        
        
        <category>d3</category>
        
      </item>
    
      <item>
        <title>五月总结</title>
        <description>&lt;blockquote&gt;
  &lt;h2 id=&quot;section&quot;&gt;«鲜活的数据» 读后感&lt;/h2&gt;
  &lt;blockquote&gt;
    &lt;p&gt;整本书浅显易懂，每一章都是配有案例和源代码，一边看一边跟着练习还是很有意思的。打算过段时间我重读一遍结合每个案例都自己操作一遍。本书没有很多理论性的内容，大多是实操性的实例，从数据获取、数据处理、可视化工具的选择到各类型数据可视化（时间趋势、比例、关系、差异、空间关系等），从一个大的视角讲解了数据可视化的基本流程已经基本方法。读完之后，觉得数据可视化下手不再觉得困难，之前学过R语言，觉得没有实际意义，没有案例可做，现在结合本书操作起来也算是轻松许多。&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;blog&quot;&gt;关于blog&lt;/h2&gt;
  &lt;blockquote&gt;
    &lt;p&gt;每次打算好要做到的事情，都因为各种理由放下。这次写blog，一放又是半个月，之间回了趟江西老家，别的不说了，希望坚持、坚持、再坚持。好不容易开了个头，千万不能再放弃了，马上30啦！&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;数据可视化最重要的部分其实是数据故事叙述和数据艺术化呈现。 –uber&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 31 May 2016 15:11:11 +0800</pubDate>
        <link>/blog/%E6%80%BB%E7%BB%93/2016/05/31/%E4%BA%94%E6%9C%88%E6%80%BB%E7%BB%93/</link>
        <guid isPermaLink="true">/blog/%E6%80%BB%E7%BB%93/2016/05/31/%E4%BA%94%E6%9C%88%E6%80%BB%E7%BB%93/</guid>
        
        
        <category>总结</category>
        
      </item>
    
      <item>
        <title>&lt;&lt;鲜活的数据&gt;&gt;第一至四章</title>
        <description>&lt;blockquote&gt;
  &lt;h3 id=&quot;section&quot;&gt;一、数据可视化的根本目的：&lt;code&gt;用数据讲故事&lt;/code&gt;。&lt;/h3&gt;
  &lt;blockquote&gt;
    &lt;p&gt;讲好故事，总体来说需要留心两点：&lt;code&gt;模式&lt;/code&gt;、&lt;code&gt;相互关系&lt;/code&gt;。&lt;/p&gt;

    &lt;p&gt;可视化设计流程其实就是一个对数据进行&lt;code&gt;编码&lt;/code&gt;的过程，读者拿到设计结果而后进行&lt;code&gt;解码&lt;/code&gt;。&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;section-1&quot;&gt;二、数据收集与格式化&lt;/h3&gt;
  &lt;blockquote&gt;
    &lt;h4 id=&quot;section-2&quot;&gt;数据收集&lt;/h4&gt;
    &lt;ul&gt;
      &lt;li&gt;由他人提供&lt;/li&gt;
      &lt;li&gt;寻找数据源（搜索引擎、大学资源、专题性数据、自动搜索[python]等）
#### 数据格式化&lt;/li&gt;
      &lt;li&gt;数据格式化（带分隔符文本、Json、XML)&lt;/li&gt;
      &lt;li&gt;格式化工具（Google Refine、Mr.Data Converter、Mr.People、Python等）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;section-3&quot;&gt;三、可视化工具&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;Excle&lt;/li&gt;
    &lt;li&gt;Google Spreadsheets&lt;/li&gt;
    &lt;li&gt;Many Eyes&lt;/li&gt;
    &lt;li&gt;Tableau Software&lt;/li&gt;
    &lt;li&gt;your.flowingdata&lt;/li&gt;
    &lt;li&gt;Python&lt;/li&gt;
    &lt;li&gt;PHP&lt;/li&gt;
    &lt;li&gt;Flash and ActionScript&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;HTML、JavaScript、Css&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;R&lt;/li&gt;
    &lt;li&gt;Adobe Illustrator&lt;/li&gt;
    &lt;li&gt;Inkscape&lt;/li&gt;
    &lt;li&gt;Google、Yahoo!、Microsoft地图&lt;/li&gt;
    &lt;li&gt;ArcGIS&lt;/li&gt;
    &lt;li&gt;Polymaps&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;section-4&quot;&gt;四、有关时间趋势的可视化&lt;/h3&gt;

  &lt;blockquote&gt;
    &lt;h4 id=&quot;section-5&quot;&gt;时间数据可分为离散时间、连续时间&lt;/h4&gt;
    &lt;blockquote&gt;
      &lt;h5 id=&quot;section-6&quot;&gt;离散型数据&lt;/h5&gt;

      &lt;ul&gt;
        &lt;li&gt;柱形图-横坐标、纵坐标、排列顺序、柱子颜色。&lt;/li&gt;
        &lt;li&gt;柱形图堆叠-数据存在子分类。&lt;/li&gt;
        &lt;li&gt;散点图-通常用来表现两个变量之间的关系。&lt;/li&gt;
      &lt;/ul&gt;

      &lt;h5 id=&quot;section-7&quot;&gt;延续性数据&lt;/h5&gt;
      &lt;blockquote&gt;
        &lt;h6 id=&quot;section-8&quot;&gt;用数据表现不断变化的现象，点点相连形成线。&lt;/h6&gt;

        &lt;ul&gt;
          &lt;li&gt;折线图&lt;/li&gt;
          &lt;li&gt;阶梯图-体现数据节点间的突发性变化。&lt;/li&gt;
          &lt;li&gt;平滑与估算-LOESS(Locally Weighted Scatterplot Smoothing)局部甲醛散点平滑法。&lt;/li&gt;
        &lt;/ul&gt;

      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 16 May 2016 11:11:11 +0800</pubDate>
        <link>/blog/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2016/05/16/%E9%B2%9C%E6%B4%BB%E7%9A%84%E6%95%B0%E6%8D%AE%E7%AC%AC%E4%B8%80%E8%87%B3%E5%9B%9B%E7%AB%A0/</link>
        <guid isPermaLink="true">/blog/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2016/05/16/%E9%B2%9C%E6%B4%BB%E7%9A%84%E6%95%B0%E6%8D%AE%E7%AC%AC%E4%B8%80%E8%87%B3%E5%9B%9B%E7%AB%A0/</guid>
        
        
        <category>读书笔记</category>
        
      </item>
    
      <item>
        <title>搭建个人博客</title>
        <description>&lt;p&gt;闲了大半年了，&lt;code&gt;学习&lt;/code&gt;、&lt;code&gt;戒烟&lt;/code&gt;、&lt;code&gt;健身&lt;/code&gt;等各种想做,没有一件坚持下来的，心大沉不下来。&lt;/p&gt;

&lt;p&gt;这礼拜终于用了三天时间吧&lt;code&gt;Github&lt;/code&gt;和&lt;code&gt;Jekyll&lt;/code&gt;研究个大概，发现年龄渐长的同时学习新的东西越来越慢，有点力不从心。在被人督促学习、工作的环境下惯了，现在环境越来越宽松反而不太适应,惰性越来越明显。试着坚持写博客，反思生活、工作，记录学习历程。&lt;/p&gt;

&lt;p&gt;做ETL（Extract、Transform、Load）相关工作已经差不多5年，大部分都是一些脏活累活，熟悉流程后基本是一些重复性劳动。但是对于企业来说，这项工作又是重中之重，没有干净整洁、高质量、高时效性的基础数据，哪来后续有意义的分析和应用？近两年接触了不少分析型工作，也见了些数据挖掘的案例，实际效果大多不明显。本想投身挖掘行业，也了解过一些算法、工具，总觉得的要达到生产的高度，这条路没那么容易走通。所以我只能另辟蹊径，从数据可视化入手，有机会再往更高的层次发展。&lt;/p&gt;

&lt;p&gt;对于数据可视化，本身也是我热爱的行业，并且入手相对简单，有了之前做ETL的基础，至少数据获取、数据整理不在话下；另一方面，我是个有点强迫症的人，对漂亮的图标图像有相对较高的追求。如果说数据可视化是让数据说话、讲故事，我希望我的数据可视化成品能说一些高质量的话、讲一些动听的故事。&lt;/p&gt;
</description>
        <pubDate>Wed, 11 May 2016 16:04:04 +0800</pubDate>
        <link>/blog/%E9%9A%8F%E7%AC%94/2016/05/11/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
        <guid isPermaLink="true">/blog/%E9%9A%8F%E7%AC%94/2016/05/11/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
        
        
        <category>随笔</category>
        
      </item>
    
      <item>
        <title>你好，世界</title>
        <description>　　&lt;p&gt;我的第一篇文章&lt;/p&gt;
</description>
        <pubDate>Wed, 11 May 2016 00:00:00 +0800</pubDate>
        <link>/blog/jekyll/2016/05/11/hello-world/</link>
        <guid isPermaLink="true">/blog/jekyll/2016/05/11/hello-world/</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
